@implements IDisposable
@inject NavigationManager NavigationManager

{{#if (eq UIFramework "Bootstrap")}}
<div class="top-row ps-3 navbar navbar-dark">
    <div class="container-fluid">
        <a class="navbar-brand" href="">LOGO</a>
    </div>
</div>

<input type="checkbox" title="Navigation menu" class="navbar-toggler" />

<div class="nav-scrollable bg-dark" onclick="document.querySelector('.navbar-toggler').click()">
    <nav class="nav flex-column">
        <div class="nav-item px-3">
            <NavLink class="nav-link" href="" Match="NavLinkMatch.All">
                <span class="bi bi-house-door-fill-nav-menu" aria-hidden="true"></span> Home
            </NavLink>
        </div>

        <div class="nav-item px-3">
            <NavLink class="nav-link" href="products">
                <span class="bi bi-plus-square-fill-nav-menu" aria-hidden="true"></span> Products
            </NavLink>
        </div>

        @* ##MenuItem## *@

        <AuthorizeView>
            <Authorized>
                <div class="nav-item px-3">
                    <NavLink class="nav-link" href="Account/Manage">
                        <span class="bi bi-person-fill-nav-menu" aria-hidden="true"></span> @context.User.Identity?.Name
                    </NavLink>
                </div>
                <div class="nav-item px-3">
                    <form action="Account/Logout" method="post">
                        <AntiforgeryToken />
                        <input type="hidden" name="ReturnUrl" value="@currentUrl" />
                        <button type="submit" class="nav-link">
                            <span class="bi bi-arrow-bar-left-nav-menu" aria-hidden="true"></span> Logout
                        </button>
                    </form>
                </div>
            </Authorized>
            <NotAuthorized>
                @*<div class="nav-item px-3">
                    <NavLink class="nav-link" href="Account/Register">
                        <span class="bi bi-person-nav-menu" aria-hidden="true"></span> Register
                    </NavLink>
                </div>
                <div class="nav-item px-3">
                    <NavLink class="nav-link" href="Account/Login">
                        <span class="bi bi-person-badge-nav-menu" aria-hidden="true"></span> Login
                    </NavLink>
                </div>*@
            </NotAuthorized>
        </AuthorizeView>
    </nav>
</div>
{{/if}}

{{#if (eq UIFramework "FluentUI")}}
<div class="navmenu">
    <input type="checkbox" title="Menu expand/collapse toggle" id="navmenu-toggle" class="navmenu-icon" />
    <label for="navmenu-toggle" class="navmenu-icon"><FluentIcon Value="@(new Icons.Regular.Size20.Navigation())" Color="Color.Fill" /></label>
    <nav class="sitenav" aria-labelledby="main-menu">
        <FluentNavMenu Id="main-menu" Width="250" Collapsible="true" Title="Navigation menu" CustomToggle="true">
            <FluentNavLink Href="/" Match="NavLinkMatch.All" Icon="@(new Icons.Regular.Size20.Home())" IconColor="Color.Accent">Home</FluentNavLink>
            <FluentNavLink Href="products" Icon="@(new Icons.Regular.Size20.NumberSymbolSquare())" IconColor="Color.Accent">Products</FluentNavLink>
             @* ##MenuItem## *@
        </FluentNavMenu>
    </nav>
</div>
{{/if}}

{{#if (eq UIFramework "MudBlazor")}}
<div class="nav-menu">
    <MudNavMenu>
        <MudNavLink Href="" Match="NavLinkMatch.All" Icon="Icons.Material.Filled.Home">
            Home
        </MudNavLink>
        <MudNavLink Href="products" Icon="Icons.Material.Filled.Inventory">
            Products
        </MudNavLink>

        @* ##MenuItem## *@

        <MudDivider Class="my-2" />

        <AuthorizeView>
            <Authorized>
                <MudNavLink Href="Account/Manage" Icon="Icons.Material.Filled.Person">
                    @context.User.Identity?.Name
                </MudNavLink>
                <MudButton Variant="Variant.Text"
                         StartIcon="Icons.Material.Filled.Logout"
                         OnClick="@(() => LogoutForm.Submit())"
                         Style="width: 100%; justify-content: flex-start;">
                    Logout
                </MudButton>
                <form @ref="LogoutForm" action="Account/Logout" method="post" style="display: none;">
                    <AntiforgeryToken />
                    <input type="hidden" name="ReturnUrl" value="@currentUrl" />
                </form>
            </Authorized>
            <NotAuthorized>
               @* <MudNavLink Href="Account/Register" Icon="Icons.Material.Filled.PersonAdd">
                    Register
                </MudNavLink>
                <MudNavLink Href="Account/Login" Icon="Icons.Material.Filled.Login">
                    Login
                </MudNavLink>*@
            </NotAuthorized>
        </AuthorizeView>
    </MudNavMenu>
</div>
{{/if}}

{{#if (eq UIFramework "Radzen")}}
<div class="nav-menu">
    <RadzenPanelMenu>
        <RadzenPanelMenuItem Text="Home" Path="" Icon="home" />
        <RadzenPanelMenuItem Text="Products" Path="products" Icon="inventory" />

        @* ##MenuItem## *@

        <AuthorizeView>
            <Authorized>
                <RadzenPanelMenuItem Text="@context.User.Identity?.Name" Path="Account/Manage" Icon="person" />
                <RadzenPanelMenuItem Text="Logout" Icon="logout">
                    <form @ref="LogoutForm" action="Account/Logout" method="post">
                        <AntiforgeryToken />
                        <input type="hidden" name="ReturnUrl" value="@currentUrl" />
                        <RadzenButton ButtonType="ButtonType.Submit" Text="Logout" ButtonStyle="ButtonStyle.Light" />
                    </form>
                </RadzenPanelMenuItem>
            </Authorized>
            <NotAuthorized>
                <RadzenPanelMenuItem Text="Register" Path="Account/Register" Icon="person_add" />
                <RadzenPanelMenuItem Text="Login" Path="Account/Login" Icon="login" />
            </NotAuthorized>
        </AuthorizeView>
    </RadzenPanelMenu>
</div>
{{/if}}

{{#if (eq UIFramework "TailwindCSS")}}
<div class="px-6">
    <!-- Navigation Header -->
    <div class="mb-6">
        <h2 class="text-xs font-semibold text-gray-500 uppercase tracking-wider mb-4">Navigation</h2>
    </div>

    <!-- Main Navigation -->
    <nav class="space-y-1">
        <a href="/" class="group flex items-center px-4 py-3 text-sm font-medium rounded-lg transition-all duration-200 @(IsActive("") ? "bg-black text-white" : "text-gray-700 hover:text-black hover:bg-gray-100")">
            <div class="flex items-center justify-center w-8 h-8 rounded-md @(IsActive("") ? "bg-white/20" : "bg-gray-100 group-hover:bg-gray-200") mr-3 transition-colors duration-200">
                <svg class="w-4 h-4 @(IsActive("") ? "text-white" : "text-gray-500 group-hover:text-gray-700")" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M3 12l2-2m0 0l7-7 7 7M5 10v10a1 1 0 001 1h3m10-11l2 2m-2-2v10a1 1 0 01-1 1h-3m-6 0a1 1 0 001-1v-4a1 1 0 011-1h2a1 1 0 011 1v4a1 1 0 001 1m-6 0h6"/>
                </svg>
            </div>
            <div class="flex-1">
                <p class="font-medium">Home</p>
                <p class="text-xs opacity-75">Dashboard overview</p>
            </div>
            @if (IsActive(""))
            {
                <div class="w-1.5 h-1.5 bg-white rounded-full"></div>
            }
        </a>

        <a href="/products" class="group flex items-center px-4 py-3 text-sm font-medium rounded-lg transition-all duration-200 @(IsActive("products") ? "bg-black text-white" : "text-gray-700 hover:text-black hover:bg-gray-100")">
            <div class="flex items-center justify-center w-8 h-8 rounded-md @(IsActive("products") ? "bg-white/20" : "bg-gray-100 group-hover:bg-gray-200") mr-3 transition-colors duration-200">
                <svg class="w-4 h-4 @(IsActive("products") ? "text-white" : "text-gray-500 group-hover:text-gray-700")" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M20 7l-8-4-8 4m16 0l-8 4m8-4v10l-8 4m0-10L4 7m8 4v10M4 7v10l8 4"/>
                </svg>
            </div>
            <div class="flex-1">
                <p class="font-medium">Products</p>
                <p class="text-xs opacity-75">Manage inventory</p>
            </div>
            @if (IsActive("products"))
            {
                <div class="w-1.5 h-1.5 bg-white rounded-full"></div>
            }
        </a>

        @* ##MenuItem## *@
    </nav>

    <!-- Authentication Section -->
    <div class="mt-8 pt-6 border-t border-gray-200">
        <AuthorizeView>
            <Authorized>
                <div class="space-y-1">
                    <h3 class="text-xs font-semibold text-gray-500 uppercase tracking-wider mb-4">Account</h3>

                    <a href="/Account/Manage" class="group flex items-center px-4 py-3 text-sm font-medium text-gray-700 hover:text-black hover:bg-gray-100 rounded-lg transition-all duration-200">
                        <div class="flex items-center justify-center w-8 h-8 rounded-md bg-gray-100 group-hover:bg-gray-200 mr-3 transition-colors duration-200">
                            <svg class="w-4 h-4 text-gray-500 group-hover:text-gray-700" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M16 7a4 4 0 11-8 0 4 4 0 018 0zM12 14a7 7 0 00-7 7h14a7 7 0 00-7-7z"/>
                            </svg>
                        </div>
                        <div class="flex-1 min-w-0">
                            <p class="font-medium truncate">@context.User.Identity?.Name</p>
                            <p class="text-xs text-gray-500">Manage account</p>
                        </div>
                    </a>

                    <form action="Account/Logout" method="post" class="w-full">
                        <AntiforgeryToken />
                        <input type="hidden" name="ReturnUrl" value="@currentUrl" />
                        <button type="submit" class="group flex items-center w-full px-4 py-3 text-sm font-medium text-gray-700 hover:text-red-600 hover:bg-red-50 rounded-lg transition-all duration-200">
                            <div class="flex items-center justify-center w-8 h-8 rounded-md bg-gray-100 group-hover:bg-red-100 mr-3 transition-colors duration-200">
                                <svg class="w-4 h-4 text-gray-500 group-hover:text-red-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M17 16l4-4m0 0l-4-4m4 4H7m6 4v1a3 3 0 01-3 3H6a3 3 0 01-3-3V7a3 3 0 013-3h4a3 3 0 013 3v1"/>
                                </svg>
                            </div>
                            <span>Logout</span>
                        </button>
                    </form>
                </div>
            </Authorized>
            <NotAuthorized>
                @*<div class="space-y-1">
                    <h3 class="text-xs font-semibold text-gray-500 uppercase tracking-wider mb-4">Account</h3>

                    <a href="/Account/Register" class="group flex items-center px-4 py-3 text-sm font-medium text-gray-700 hover:text-black hover:bg-gray-100 rounded-lg transition-all duration-200">
                        <div class="flex items-center justify-center w-8 h-8 rounded-md bg-gray-100 group-hover:bg-gray-200 mr-3 transition-colors duration-200">
                            <svg class="w-4 h-4 text-gray-500 group-hover:text-gray-700" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M18 9v3m0 0v3m0-3h3m-3 0h-3m-2-5a4 4 0 11-8 0 4 4 0 018 0zM3 20a6 6 0 0112 0v1H3v-1z"/>
                            </svg>
                        </div>
                        <span>Register</span>
                    </a>

                    <a href="/Account/Login" class="group flex items-center px-4 py-3 text-sm font-medium text-gray-700 hover:text-black hover:bg-gray-100 rounded-lg transition-all duration-200">
                        <div class="flex items-center justify-center w-8 h-8 rounded-md bg-gray-100 group-hover:bg-gray-200 mr-3 transition-colors duration-200">
                            <svg class="w-4 h-4 text-gray-500 group-hover:text-gray-700" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M11 16l-4-4m0 0l4-4m-4 4h14m-5 4v1a3 3 0 01-3 3H6a3 3 0 01-3-3V7a3 3 0 013-3h7a3 3 0 013 3v1"/>
                            </svg>
                        </div>
                        <span>Login</span>
                    </a>
                </div>*@
            </NotAuthorized>
        </AuthorizeView>
    </div>

    <!-- Quick Actions -->
    <div class="mt-6 pt-6 border-t border-gray-200">
        <h3 class="text-xs font-semibold text-gray-500 uppercase tracking-wider mb-4">Quick Actions</h3>
        <div class="space-y-1">
            <a href="/products/create" class="group flex items-center px-4 py-3 text-sm font-medium text-gray-700 hover:text-black hover:bg-gray-100 rounded-lg transition-all duration-200">
                <div class="flex items-center justify-center w-8 h-8 rounded-md bg-gray-100 group-hover:bg-gray-200 mr-3 transition-colors duration-200">
                    <svg class="w-4 h-4 text-gray-500 group-hover:text-gray-700" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 6v6m0 0v6m0-6h6m-6 0H6"/>
                    </svg>
                </div>
                <span>Add Product</span>
            </a>
        </div>
    </div>
</div>
{{/if}}

@code {
    private bool IsActive(string href)
    {
        return string.Equals(currentUrl?.TrimEnd('/'), href.TrimEnd('/'), StringComparison.OrdinalIgnoreCase);
    }
}

@code {
    private string? currentUrl;
    private ElementReference LogoutForm;

    protected override void OnInitialized()
    {
        currentUrl = NavigationManager.ToBaseRelativePath(NavigationManager.Uri);
        NavigationManager.LocationChanged += OnLocationChanged;
    }

    private void OnLocationChanged(object? sender, LocationChangedEventArgs e)
    {
        currentUrl = NavigationManager.ToBaseRelativePath(e.Location);
        StateHasChanged();
    }

    public void Dispose()
    {
        NavigationManager.LocationChanged -= OnLocationChanged;
    }
}
