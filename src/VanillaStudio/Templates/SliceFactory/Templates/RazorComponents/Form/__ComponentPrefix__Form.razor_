@page "/__componentPrefixPlural__/create"
@page "/__componentPrefixPlural__/edit/{Id}"
@using Microsoft.Extensions.DependencyInjection
@using Microsoft.AspNetCore.Components.Forms
@using {{RootNamespace}}.Framework
@using {{RootNamespace}}.ServiceContracts.Features.__moduleNamespace__

@inherits FormBase<__ComponentPrefix__FormViewModel, __ComponentPrefix__FormBusinessModel, __primaryKeyType__, I__ComponentPrefix__FormDataService>

{{#if (eq UIFramework "Bootstrap")}}
<div class="container-fluid py-4">
    <div class="row justify-content-center">
        <div class="col-lg-8">
            <!-- Header -->
            <div class="d-flex justify-content-between align-items-center mb-4">
                <div>
                    <h2 class="mb-1">@(IsEditMode ? "Edit __ComponentPrefix__" : "Create New __ComponentPrefix__")</h2>
                    <p class="text-muted mb-0">@(IsEditMode ? "Update __componentPrefix__ information" : "Add a new __componentPrefix__ to your catalog")</p>
                </div>
                <a class="btn btn-outline-secondary" href="/__componentPrefixPlural__">
                    <i class="bi bi-arrow-left me-2"></i>Back to List
                </a>
            </div>

            <!-- Form Card -->
            <div class="card shadow-sm border-0">
                <div class="card-body p-4">
                    <EditForm Model="@SelectedItem" OnValidSubmit="SaveAsync" FormName="___ComponentPrefix__Form">
                        <DataAnnotationsValidator />

                        <!-- Error Message -->
                        @if (!string.IsNullOrEmpty(ErrorMessage))
                        {
                            <div class="alert alert-danger d-flex align-items-center mb-4" role="alert">
                                <i class="bi bi-exclamation-triangle-fill me-2"></i>
                                <div>@ErrorMessage</div>
                            </div>
                        }

                        <div class="row g-3">
                            <!-- Name Field -->
                            <div class="col-12">
                                <label class="form-label fw-semibold">Name <span class="text-danger">*</span></label>
                                <InputText class="form-control" @bind-Value="SelectedItem.Name" placeholder="Enter __componentPrefix__ name" />
                                <ValidationMessage For="@(() => SelectedItem.Name)" class="text-danger small" />
                            </div>

                            <!-- Add more fields as needed -->
                        </div>

                        <hr class="my-4" />

                        <!-- Form Actions -->
                        <div class="d-flex gap-2 justify-content-end">
                            <a class="btn btn-outline-secondary" href="/__componentPrefixPlural__">Cancel</a>
                            <button type="submit" class="btn btn-dark" disabled="@IsWorking">
                                @if (IsWorking)
                                {
                                    <span class="spinner-border spinner-border-sm me-2" role="status" aria-hidden="true"></span>
                                }
                                <i class="bi bi-check-circle me-2"></i>
                                @(IsEditMode ? "Update __ComponentPrefix__" : "Create __ComponentPrefix__")
                            </button>
                        </div>
                    </EditForm>
                </div>
            </div>
        </div>
    </div>
</div>
{{/if}}

{{#if (eq UIFramework "FluentUI")}}
<div class="__componentPrefix__-form-container">
    <!-- Form Header -->
    <div AreaRestricted=false MinimalStyle=true>
        <FluentIcon Value="@(new Icons.Regular.Size24.DocumentAdd())" Color="Color.Accent" />
        <div class="header-content">
            <FluentLabel Typo="Typography.H4" Class="form-title">
                @(IsEditMode ? "Edit __ComponentPrefix__" : "Create New __ComponentPrefix__")
            </FluentLabel>
            <FluentLabel Typo="Typography.Body" Class="form-subtitle">
                @(IsEditMode ? "Update __componentPrefix__ information below" : "Fill in the details to create a new __componentPrefix__")
            </FluentLabel>
        </div>
        <FluentButton Appearance="Appearance.Outline"
                     IconStart="@(new Icons.Regular.Size16.ArrowLeft())"
                     OnClick="@(() => NavigationManager.NavigateTo("/__componentPrefixPlural__"))">
            Back to List
        </FluentButton>
    </div>

    <!-- Main Form Card -->
    <FluentCard Class="form-card">
          <FluentLabel Typo="Typography.H5">__ComponentPrefix__ Details</FluentLabel>
      
            <!-- Error Message -->
            @if (!string.IsNullOrEmpty(ErrorMessage))
            {
                <FluentMessageBar Intent="MessageIntent.Error" Class="form-error-message">
                    @ErrorMessage
                </FluentMessageBar>
            }

            <EditForm Model="@SelectedItem" OnValidSubmit="SaveAsync" FormName="___ComponentPrefix__Form">
                <DataAnnotationsValidator />

                <FluentGrid>
                    <FluentGridItem xs="12" sm="6">
                        <div class="form-field">
                            <FluentLabel For="name-field" Class="field-label">Name *</FluentLabel>
                            <FluentTextField @bind-Value="SelectedItem.Name"
                                           Id="name-field"
                                           Placeholder="Enter __componentPrefix__ name"
                                           Required="true"
                                           Class="form-input" />
                            <FluentValidationMessage For="@(() => SelectedItem.Name)" Class="validation-message" />
                        </div>
                    </FluentGridItem>

                    <FluentGridItem xs="12" sm="6">
                        <div class="form-field">
                            <FluentLabel For="description-field" Class="field-label">Description</FluentLabel>
                            <FluentTextArea @bind-Value="SelectedItem.Description"
                                          Id="description-field"
                                          Placeholder="Enter __componentPrefix__ description"
                                          Rows="3"
                                          Class="form-input" />
                            <FluentValidationMessage For="@(() => SelectedItem.Description)" Class="validation-message" />
                        </div>
                    </FluentGridItem>

                    <!-- Add more fields as needed -->
              
                      <FluentGridItem xs="12">
                        <div class="form-actions">
                            <FluentButton Type="ButtonType.Submit"
                                        Appearance="Appearance.Accent"
                                        IconStart="@(new Icons.Regular.Size16.Save())"
                                        Class="save-button">
                                @(IsEditMode ? "Update" : "Create") __ComponentPrefix__
                            </FluentButton>
                            <FluentButton Appearance="Appearance.Neutral"
                                        OnClick="@(() => NavigationManager.NavigateTo("/__componentPrefixPlural__"))"
                                        Class="cancel-button">
                                Cancel
                            </FluentButton>
                        </div>
                     </FluentGridItem>
                </FluentGrid>
            </EditForm>
        
    </FluentCard>
</div>
{{/if}}

{{#if (eq UIFramework "MudBlazor")}}
<div class="__componentPrefix__-form-container">
    <div class="form-header">
        <MudIcon Icon="Icons.Material.Filled.Inventory" Size="Size.Large" Color="Color.Primary" />
        <div class="header-content">
            <MudText Typo="Typo.h4">@(IsEditMode ? "Edit __ComponentPrefix__" : "Create New __ComponentPrefix__")</MudText>
            <MudText Typo="Typo.body2" Class="mud-text-secondary">
                @(IsEditMode ? "Update __componentPrefix__ information" : "Add a new __componentPrefix__ to your catalog")
            </MudText>
        </div>
        <MudButton Variant="Variant.Outlined"
                 Color="Color.Default"
                 Href="/__componentPrefixPlural__">
            <MudIcon Icon="Icons.Material.Filled.ArrowBack" />
            Back to List
        </MudButton>
    </div>

    <MudCard Class="form-card">
        <MudCardContent>
            <EditForm Model="@SelectedItem" OnValidSubmit="SaveAsync" FormName="___ComponentPrefix__Form">
                <DataAnnotationsValidator />

                <!-- Error Message -->
                @if (!string.IsNullOrEmpty(ErrorMessage))
                {
                    <MudAlert Severity="Severity.Error" Class="mb-4">
                        @ErrorMessage
                    </MudAlert>
                }

                <div class="form-grid">
                    <!-- Name Field -->
                    <div class="form-field">
                        <MudTextField @bind-Value="SelectedItem.Name"
                                    Label="Name"
                                    Required="true"
                                    Placeholder="Enter __componentPrefix__ name"
                                    Variant="Variant.Outlined" />
                        <ValidationMessage For="@(() => SelectedItem.Name)" class="validation-message" />
                    </div>

                    <!-- Add more fields as needed -->
                </div>
            </EditForm>
        </MudCardContent>

        <MudCardActions>
            <MudButton Variant="Variant.Outlined"
                     Color="Color.Default"
                     Href="/__componentPrefixPlural__">
                <MudIcon Icon="Icons.Material.Filled.Cancel" />
                Cancel
            </MudButton>
            <MudButton ButtonType="ButtonType.Submit"
                     Variant="Variant.Filled"
                     Color="Color.Primary"
                     Disabled="@IsWorking">
                @if (IsWorking)
                {
                    <MudProgressCircular Size="Size.Small" Indeterminate="true" />
                }
                else
                {
                    <MudIcon Icon="Icons.Material.Filled.Check" />
                }
                @(IsEditMode ? "Update __ComponentPrefix__" : "Create __ComponentPrefix__")
            </MudButton>
        </MudCardActions>
    </MudCard>
</div>
{{/if}}

{{#if (eq UIFramework "Radzen")}}
<div class="__componentPrefix__-form-container">
    <div class="form-header">
        <i class="rzi rzi-box" style="font-size: 2rem; color: var(--rz-primary);"></i>
        <div class="header-content">
            <RadzenText TextStyle="TextStyle.H4">@(IsEditMode ? "Edit __ComponentPrefix__" : "Create New __ComponentPrefix__")</RadzenText>
            <RadzenText TextStyle="TextStyle.Body2" Class="text-muted">
                @(IsEditMode ? "Update __componentPrefix__ information" : "Add a new __componentPrefix__ to your catalog")
            </RadzenText>
        </div>
        <RadzenButton ButtonStyle="ButtonStyle.Light"
                    Click="@(() => NavigationManager.NavigateTo("/__componentPrefixPlural__"))">
            <i class="rzi rzi-arrow-left"></i>
            Back to List
        </RadzenButton>
    </div>

    <RadzenCard Class="form-card">
        <EditForm Model="@SelectedItem" OnValidSubmit="SaveAsync" FormName="___ComponentPrefix__Form">
            <DataAnnotationsValidator />

            <!-- Error Message -->
            @if (!string.IsNullOrEmpty(ErrorMessage))
            {
                <RadzenAlert AlertStyle="AlertStyle.Danger" Class="mb-4">
                    @ErrorMessage
                </RadzenAlert>
            }

            <div class="form-grid">
                <!-- Name Field -->
                <div class="form-field">
                    <RadzenLabel Text="Name *" />
                    <RadzenTextBox @bind-Value="SelectedItem.Name"
                                 Placeholder="Enter __componentPrefix__ name"
                                 Style="width: 100%;" />
                    <ValidationMessage For="@(() => SelectedItem.Name)" class="validation-message" />
                </div>

                <!-- Add more fields as needed -->
            </div>

            <!-- Form Actions -->
            <div class="form-actions">
                <RadzenButton ButtonStyle="ButtonStyle.Light"
                            Click="@(() => NavigationManager.NavigateTo("/__componentPrefixPlural__"))">
                    <i class="rzi rzi-times"></i>
                    Cancel
                </RadzenButton>
                <RadzenButton ButtonType="ButtonType.Submit"
                            ButtonStyle="ButtonStyle.Primary"
                            Disabled="@IsWorking">
                    @if (IsWorking)
                    {
                        <i class="rzi rzi-spinner rzi-spin"></i>
                    }
                    else
                    {
                        <i class="rzi rzi-check"></i>
                    }
                    @(IsEditMode ? "Update __ComponentPrefix__" : "Create __ComponentPrefix__")
                </RadzenButton>
            </div>
        </EditForm>
    </RadzenCard>
</div>
{{/if}}

{{#if (eq UIFramework "TailwindCSS")}}
<div class="max-w-4xl mx-auto px-4 sm:px-6 lg:px-8 py-6">
    <!-- Form Header -->
    <div class="bg-white rounded-lg shadow-sm border border-gray-200 mb-6">
        <div class="px-6 py-4 border-b border-gray-200">
            <div class="flex items-center justify-between">
                <div>
                    <h2 class="text-xl font-semibold text-gray-900">
                        @(IsEditMode ? "Edit __ComponentPrefix__" : "Create New __ComponentPrefix__")
                    </h2>
                    <p class="text-sm text-gray-600 mt-1">
                        @(IsEditMode ? "Update the __componentPrefix__ information below" : "Fill in the details to create a new __componentPrefix__")
                    </p>
                </div>
                <a href="/__componentPrefixPlural__"
                   class="inline-flex items-center px-4 py-2 text-sm font-medium text-gray-700 bg-white border border-gray-300 rounded-lg hover:bg-gray-50 transition-colors">
                    <svg class="w-4 h-4 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M10 19l-7-7m0 0l7-7m-7 7h18"/>
                    </svg>
                    Back to List
                </a>
            </div>
        </div>

        <div class="px-6 py-6">
            <EditForm Model="@SelectedItem" OnValidSubmit="SaveAsync" FormName="__ComponentPrefix__Form">
                <DataAnnotationsValidator />

                <!-- Error Message -->
                @if (!string.IsNullOrEmpty(ErrorMessage))
                {
                    <div class="mb-6 p-4 bg-red-50 border border-red-200 rounded-lg">
                        <div class="flex">
                            <svg class="h-5 w-5 text-red-400 mr-2" fill="currentColor" viewBox="0 0 20 20">
                                <path fill-rule="evenodd" d="M10 18a8 8 0 100-16 8 8 0 000 16zM8.707 7.293a1 1 0 00-1.414 1.414L8.586 10l-1.293 1.293a1 1 0 101.414 1.414L10 11.414l1.293 1.293a1 1 0 001.414-1.414L11.414 10l1.293-1.293a1 1 0 00-1.414-1.414L10 8.586 8.707 7.293z" clip-rule="evenodd"/>
                            </svg>
                            <p class="text-sm text-red-800">@ErrorMessage</p>
                        </div>
                    </div>
                }

                <div class="space-y-6">
                    <!-- Name Field -->
                    <div>
                        <label for="name" class="block text-sm font-medium text-gray-700 mb-2">Name *</label>
                        <InputText @bind-Value="SelectedItem.Name"
                                   id="name"
                                   class="w-full px-3 py-2 text-gray-900 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-blue-500"
                                   placeholder="Enter __componentPrefix__ name" />
                        <ValidationMessage For="@(() => SelectedItem.Name)" class="mt-1 text-sm text-red-600" />
                    </div>

                    <!-- Add more fields as needed -->
                    <!-- Example: Description Field -->
                    <div>
                        <label for="description" class="block text-sm font-medium text-gray-700 mb-2">Description</label>
                        <InputTextArea @bind-Value="SelectedItem.Description"
                                       id="description"
                                       rows="4"
                                       class="w-full px-3 py-2 text-gray-900 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-blue-500"
                                       placeholder="Enter __componentPrefix__ description" />
                        <ValidationMessage For="@(() => SelectedItem.Description)" class="mt-1 text-sm text-red-600" />
                    </div>
                </div>

                <!-- Form Actions -->
                <div class="flex flex-col sm:flex-row gap-3 pt-6 mt-6 border-t border-gray-200">
                    <button type="submit"
                            disabled="@IsWorking"
                            class="w-full sm:w-auto px-6 py-2 bg-blue-600 text-white font-medium rounded-lg hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-offset-2 disabled:opacity-50 disabled:cursor-not-allowed transition-colors">
                        @if (IsWorking)
                        {
                            <div class="flex items-center justify-center">
                                <div class="animate-spin rounded-full h-4 w-4 border-b-2 border-white mr-2"></div>
                                Saving...
                            </div>
                        }
                        else
                        {
                            <span>@(IsEditMode ? "Update __ComponentPrefix__" : "Create __ComponentPrefix__")</span>
                        }
                    </button>

                    <a href="/__componentPrefixPlural__"
                       class="w-full sm:w-auto px-6 py-2 bg-gray-100 text-gray-700 font-medium rounded-lg hover:bg-gray-200 focus:outline-none focus:ring-2 focus:ring-gray-500 focus:ring-offset-2 transition-colors text-center">
                        Cancel
                    </a>
                </div>
            </EditForm>
        </div>
    </div>

    <!-- Help Text -->
    <div class="mt-4">
        <p class="text-sm text-gray-500">
            <span class="text-red-500">*</span> Required fields
        </p>
    </div>
</div>
{{/if}}

@code {
    protected override Task OnSelectedItemInitialized(IServiceScope scope)
    {
        // Initialize any dropdown data or other dependencies here
        return Task.CompletedTask;
    }

    public override Task OnAfterSaveAsync(__primaryKeyType__ key)
    {
        if (key != null)
        {
            NavigationManager.NavigateTo("/__componentPrefixPlural__");
        }
        return Task.CompletedTask;
    }
}
