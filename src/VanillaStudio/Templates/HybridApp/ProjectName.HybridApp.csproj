<Project Sdk="Microsoft.NET.Sdk.Razor">

    <PropertyGroup>
        <TargetFrameworks>net9.0-android;net9.0-ios;net9.0-maccatalyst</TargetFrameworks>
        <TargetFrameworks Condition="$([MSBuild]::IsOSPlatform('windows'))">$(TargetFrameworks);net9.0-windows10.0.19041.0</TargetFrameworks>
        <!-- Uncomment to also build the tizen app. You will need to install tizen by following this: https://github.com/Samsung/Tizen.NET -->
        <!-- <TargetFrameworks>$(TargetFrameworks);net9.0-tizen</TargetFrameworks> -->

        <!-- Note for MacCatalyst:
            The default runtime is maccatalyst-x64, except in Release config, in which case the default is maccatalyst-x64;maccatalyst-arm64.
            When specifying both architectures, use the plural <RuntimeIdentifiers> instead of the singular <RuntimeIdentifier>.
            The Mac App Store will NOT accept apps with ONLY maccatalyst-arm64 indicated;
            either BOTH runtimes must be indicated or ONLY macatalyst-x64. -->
        <!-- For example: <RuntimeIdentifiers>maccatalyst-x64;maccatalyst-arm64</RuntimeIdentifiers> -->

        <OutputType>Exe</OutputType>
        <RootNamespace>{{ProjectName}}.HybridApp</RootNamespace>
        <UseMaui>true</UseMaui>
        <SingleProject>true</SingleProject>
        <ImplicitUsings>enable</ImplicitUsings>
        <EnableDefaultCssItems>false</EnableDefaultCssItems>
        <Nullable>enable</Nullable>

        <!-- Display name -->
        <ApplicationTitle>{{ProjectName}}.HybridApp</ApplicationTitle>

        <!-- App Identifier -->
        <ApplicationId>com.companyname.{{ProjectNameLower}}.hybridapp</ApplicationId>

        <!-- Versions -->
        <ApplicationDisplayVersion>1.0</ApplicationDisplayVersion>
        <ApplicationVersion>1</ApplicationVersion>

        <!-- To develop, package, and publish an app to the Microsoft Store, see: https://aka.ms/MauiTemplateUnpackaged -->
        <WindowsPackageType>None</WindowsPackageType>
        <SupportedOSPlatformVersion Condition="$([MSBuild]::GetTargetPlatformIdentifier('$(TargetFramework)')) == 'android'">24.0</SupportedOSPlatformVersion>
        <SupportedOSPlatformVersion Condition="$([MSBuild]::GetTargetPlatformIdentifier('$(TargetFramework)')) == 'ios'">11.0</SupportedOSPlatformVersion>
        <SupportedOSPlatformVersion Condition="$([MSBuild]::GetTargetPlatformIdentifier('$(TargetFramework)')) == 'maccatalyst'">13.1</SupportedOSPlatformVersion>
        <SupportedOSPlatformVersion Condition="$([MSBuild]::GetTargetPlatformIdentifier('$(TargetFramework)')) == 'windows'">10.0.17763.0</SupportedOSPlatformVersion>
        <TargetPlatformMinVersion Condition="$([MSBuild]::GetTargetPlatformIdentifier('$(TargetFramework)')) == 'windows'">10.0.17763.0</TargetPlatformMinVersion>
        <SupportedOSPlatformVersion Condition="$([MSBuild]::GetTargetPlatformIdentifier('$(TargetFramework)')) == 'tizen'">6.5</SupportedOSPlatformVersion>
    </PropertyGroup>

    <ItemGroup>
        <!-- App Icon -->
        <MauiIcon Include="Resources\AppIcon\appicon.svg" ForegroundFile="Resources\AppIcon\appiconfg.svg" Color="#512BD4" />

        <!-- Splash Screen -->
        <MauiSplashScreen Include="Resources\Splash\splash.svg" Color="#512BD4" BaseSize="128,128" />

        <!-- Images -->
        <MauiImage Include="Resources\Images\*" />
        <MauiImage Update="Resources\Images\dotnet_bot.svg" BaseSize="168,208" />

        <!-- Custom Fonts -->
        <MauiFont Include="Resources\Fonts\*" />

        <!-- Raw Assets (also remove the "Resources\Raw" prefix) -->
        <MauiAsset Include="Resources\Raw\**" LogicalName="%(RecursiveDir)%(Filename)%(Extension)" />
    </ItemGroup>

    <ItemGroup>
		<PackageReference Include="Microsoft.Extensions.Http" Version="9.0.8" />
        <PackageReference Include="Microsoft.Maui.Controls.Compatibility" Version="9.0.10" />
        <PackageReference Include="Microsoft.AspNetCore.Components.WebView.Maui" Version="9.0.10" />
        <PackageReference Include="Microsoft.Extensions.Logging.Debug" Version="9.0.0" />
    </ItemGroup>

    <ItemGroup>
      <ProjectReference Include="..\{{ProjectName}}.Platform\{{ProjectName}}.Razor\{{ProjectName}}.Razor.csproj" />
      <ProjectReference Include="..\{{ProjectName}}.Platform\{{ProjectName}}.Client.Shared\{{ProjectName}}.Client.Shared.csproj" />
      <ProjectReference Include="..\{{ProjectName}}.Base\{{ProjectName}}.Framework\{{ProjectName}}.Framework.csproj" />
    </ItemGroup>

    <!-- Tailwind CSS Build Configuration for Hybrid App -->
    {{#if (eq UIFramework "TailwindCSS")}}
    <!--<Target Name="BuildTailwindCSS" BeforeTargets="Build">
        <Message Text="Building Tailwind CSS for Hybrid App..." Importance="high" />
        <Exec Command="npm install" WorkingDirectory="$(MSBuildProjectDirectory)" ContinueOnError="false" />
        <Exec Command="npm run build-css-prod" WorkingDirectory="$(MSBuildProjectDirectory)" ContinueOnError="false" />
    </Target>

    <Target Name="WatchTailwindCSS" Condition="'$(Configuration)' == 'Debug'" BeforeTargets="Build">
        <Message Text="Starting Tailwind CSS in watch mode for Hybrid App development..." Importance="high" />
        <Exec Command="npm run build-css" WorkingDirectory="$(MSBuildProjectDirectory)" ContinueOnError="true" />
    </Target> -->

    <ItemGroup>
        <Content Remove="package.json" />
        <Content Remove="package-lock.json" />
        <Content Remove="tailwind.config.js" />
        <Content Remove="postcss.config.js" />
        <Content Remove="Styles\**" />
        <Content Remove="node_modules\**" />
    </ItemGroup>

    <ItemGroup>
        <None Include="package.json" />
        <None Include="tailwind.config.js" />
        <None Include="postcss.config.js" />
        <None Include="Styles\**" />
    </ItemGroup>
    {{/if}}

</Project>
