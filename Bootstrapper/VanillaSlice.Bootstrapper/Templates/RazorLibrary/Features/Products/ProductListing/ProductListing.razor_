@using {{ProjectName}}.Framework
@using {{ProjectName}}.ServiceContracts.Features.Products
@page "/products"
@inherits ListingBase<{{ProjectName}}.Razor.Features.Products.ProductListing.ProductListingViewModel, ProductListingBusinessModel,
                                {{ProjectName}}.Razor.Features.Products.ProductListing.ProductFilterViewModel, ProductFilterBusinessModel, IProductListingDataService>

<div class="container-fluid">
    <!-- Page Header -->
    <div class="d-flex justify-content-between align-items-center mb-4">
        <div>
            <h2 class="mb-1">Product Catalog</h2>
            <p class="text-muted mb-0">Manage your product inventory</p>
        </div>
        <a class="btn btn-dark shadow-sm" href="/products/create">
            <i class="bi bi-plus-circle me-2"></i>Add New Product
        </a>
    </div>

    @if (ItemsLoaded)
    {
        if (Items?.Any() == true)
        {
            <div class="row g-4">
                @foreach (var item in Items)
                {
                    <div class="col-12 col-md-6 col-lg-4">
                        <div class="card h-100 shadow-sm border-1 product-card">
                            <div class="card-body d-flex flex-column">
                                <div class="d-flex justify-content-between align-items-start mb-3">
                                    <h5 class="card-title mb-0 text-truncate" title="@item.Name">@item.Name</h5>
                                    <span class="badge @GetStatusBadgeClass(item.ProductStatus) ms-2">
                                        @item.ProductStatus.ToString()
                                    </span>
                                </div>

                                <div class="mb-3">
                                    <span class="h4 text-dark fw-bold">@item.Price.ToString("C")</span>
                                </div>

                                <p class="card-text text-muted flex-grow-1 mb-3">
                                    @if (!string.IsNullOrEmpty(item.Description))
                                    {
                                        @(item.Description.Length > 180 ? item.Description[..180] + "..." : item.Description)
                                    }
                                    else
                                    {
                                        <em>No description available</em>
                                    }
                                </p>

                                <div class="mt-auto">
                                    <div class="d-flex justify-content-between align-items-center">
                                        <small class="text-muted">
                                            <i class="bi bi-calendar3 me-1"></i>
                                            @item.CreatedAt.ToString("MMM dd, yyyy")
                                        </small>
                                        <a class="btn btn-outline-dark btn-sm" href="/products/edit/@item.Id">
                                            <i class="bi bi-pencil me-1"></i>Edit
                                        </a>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                }
            </div>
        }
        else
        {
            <!-- Empty State -->
            <div class="text-center py-5">
                <div class="mb-4">
                    <i class="bi bi-box-seam display-1 text-muted"></i>
                </div>
                <h4 class="text-muted mb-3">No Products Found</h4>
                <p class="text-muted mb-4">Get started by creating your first product.</p>
                <a class="btn btn-dark" href="/products/create">
                    <i class="bi bi-plus-circle me-2"></i>Create Your First Product
                </a>
            </div>
        }
    }
    @if (!ItemsLoaded || IsWorking)
    {
        <div class="loading-overlay" role="status" aria-live="polite" aria-busy="true">
            <div class="text-center">
                <div class="shimmer-text mb-3">Loading…</div>
                <div class="spinner-border" role="presentation"></div>
            </div>
        </div>
    }
</div>

@code {
    private string GetStatusBadgeClass({{ProjectName}}.Common.Enums.ProductStatus status)
    {
        return status switch
        {
            {{ProjectName}}.Common.Enums.ProductStatus.Active => "bg-success",
            {{ProjectName}}.Common.Enums.ProductStatus.Inactive => "bg-secondary",
            {{ProjectName}}.Common.Enums.ProductStatus.Discontinued => "bg-danger",
            _ => "bg-secondary"
        };
    }
}
