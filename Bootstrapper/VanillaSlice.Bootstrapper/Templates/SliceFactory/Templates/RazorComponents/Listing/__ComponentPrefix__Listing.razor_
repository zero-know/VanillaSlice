@using {{RootNamespace}}.Framework
@using {{RootNamespace}}.ServiceContracts.Features.__moduleNamespace__
@page "/__componentPrefixPlural__"
@inherits ListingBase<__ComponentPrefix__ListingViewModel, __ComponentPrefix__ListingBusinessModel,
                                __ComponentPrefix__FilterViewModel, __ComponentPrefix__FilterBusinessModel, I__ComponentPrefix__ListingDataService>

<div class="container-fluid">
    <!-- Page Header -->
    {{#if (eq UIFramework "Bootstrap")}}
    <div class="d-flex justify-content-between align-items-center mb-4">
        <div>
            <h2 class="mb-1">__ComponentPrefix__ Catalog</h2>
            <p class="text-muted mb-0">Manage your __ComponentPrefixPlural__</p>
        </div>
        <a class="btn btn-dark shadow-sm" href="/__componentPrefixPlural__/create">
            <i class="bi bi-plus-circle me-2"></i>Add New __ComponentPrefix__
        </a>
    </div>
    {{/if}}

    {{#if (eq UIFramework "FluentUI")}}
    <div class="page-header">
        <div class="header-content">
            <FluentLabel Typo="Typography.H2">__ComponentPrefix__ Catalog</FluentLabel>
            <FluentLabel Typo="Typography.Body">Manage your __ComponentPrefixPlural__</FluentLabel>
        </div>
        <FluentButton Appearance="Appearance.Accent"
                    OnClick="@(() => NavigationManager.NavigateTo("/__componentPrefixPlural__/create"))">
            <FluentIcon Value="@(new Icons.Regular.Size16.Add())" />
            Add New __ComponentPrefix__
        </FluentButton>
    </div>
    {{/if}}

    {{#if (eq UIFramework "MudBlazor")}}
    <div class="page-header">
        <div class="header-content">
            <MudText Typo="Typo.h4">__ComponentPrefix__ Catalog</MudText>
            <MudText Typo="Typo.body2" Class="mud-text-secondary">Manage your __ComponentPrefixPlural__</MudText>
        </div>
        <MudButton Variant="Variant.Filled"
                 Color="Color.Primary"
                 Href="/__componentPrefixPlural__/create">
            <MudIcon Icon="Icons.Material.Filled.Add" />
            Add New __ComponentPrefix__
        </MudButton>
    </div>
    {{/if}}

    {{#if (eq UIFramework "Radzen")}}
    <div class="page-header">
        <div class="header-content">
            <RadzenText TextStyle="TextStyle.H4">__ComponentPrefix__ Catalog</RadzenText>
            <RadzenText TextStyle="TextStyle.Body2" Class="text-muted">Manage your __ComponentPrefixPlural__</RadzenText>
        </div>
        <RadzenButton ButtonStyle="ButtonStyle.Primary"
                    Click="@(() => NavigationManager.NavigateTo("/__componentPrefixPlural__/create"))">
            <i class="rzi rzi-plus"></i>
            Add New __ComponentPrefix__
        </RadzenButton>
    </div>
    {{/if}}
    @if(!string.IsNullOrEmpty(Error))
    {
        {{#if (eq UIFramework "Bootstrap")}}
        <div class="alert alert-danger d-flex align-items-center mb-4" role="alert">
            <i class="bi bi-exclamation-triangle-fill me-2"></i>
            <div>@Error</div>
        </div>
        {{/if}}

        {{#if (eq UIFramework "FluentUI")}}
        <FluentMessageBar Intent="MessageIntent.Error" Class="mb-4">
            @Error
        </FluentMessageBar>
        {{/if}}

        {{#if (eq UIFramework "MudBlazor")}}
        <MudAlert Severity="Severity.Error" Class="mb-4">
            @Error
        </MudAlert>
        {{/if}}

        {{#if (eq UIFramework "Radzen")}}
        <RadzenAlert AlertStyle="AlertStyle.Danger" Class="mb-4">
            @Error
        </RadzenAlert>
        {{/if}}
    }
    <!-- Items Grid -->
   @if (ItemsLoaded)
    {
        if (Items?.Any() == true)
        {
            {{#if (eq UIFramework "Bootstrap")}}
            <div class="row g-4">
                @foreach (var item in Items)
                {
                    <div class="col-12 col-md-6 col-lg-4">
                        <div class="card h-100 shadow-sm border-1 product-card">
                            <div class="card-body d-flex flex-column">
                                <div class="d-flex justify-content-between align-items-start mb-3">
                                    <h5 class="card-title mb-0 text-truncate" title="@item.Name">@item.Name</h5>
                                </div>
                                <div class="mt-auto">
                                    <div class="d-flex justify-content-between align-items-center">
                                        <a class="btn btn-outline-dark btn-sm" href="/__componentPrefixPlural__/edit/@item.Id">
                                            <i class="bi bi-pencil me-1"></i>Edit
                                        </a>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                }
            </div>
            {{/if}}

            {{#if (eq UIFramework "FluentUI")}}
            <div class="item-grid">
                @foreach (var item in Items)
                {
                    <FluentCard Class="item-card">
                        <div class="card-header">
                            <FluentLabel Typo="Typography.H6" Class="card-title">@item.Name</FluentLabel>
                        </div>
                        <div class="card-actions">
                            <FluentButton Appearance="Appearance.Outline"
                                        Size="ButtonSize.Small"
                                        OnClick="@(() => NavigationManager.NavigateTo($"/__componentPrefixPlural__/edit/{item.Id}"))">
                                <FluentIcon Value="@(new Icons.Regular.Size16.Edit())" />
                                Edit
                            </FluentButton>
                        </div>
                    </FluentCard>
                }
            </div>
            {{/if}}

            {{#if (eq UIFramework "MudBlazor")}}
            <div class="item-grid">
                @foreach (var item in Items)
                {
                    <MudCard Class="item-card">
                        <MudCardContent>
                            <div class="card-header">
                                <MudText Typo="Typo.h6" Class="card-title">@item.Name</MudText>
                            </div>
                        </MudCardContent>
                        <MudCardActions>
                            <MudButton Variant="Variant.Outlined"
                                     Size="Size.Small"
                                     Href="@($"/__componentPrefixPlural__/edit/{item.Id}")">
                                <MudIcon Icon="Icons.Material.Filled.Edit" />
                                Edit
                            </MudButton>
                        </MudCardActions>
                    </MudCard>
                }
            </div>
            {{/if}}

            {{#if (eq UIFramework "Radzen")}}
            <div class="item-grid">
                @foreach (var item in Items)
                {
                    <RadzenCard Class="item-card">
                        <div class="card-header">
                            <RadzenText TextStyle="TextStyle.H6" Class="card-title">@item.Name</RadzenText>
                        </div>
                        <div class="card-actions">
                            <RadzenButton ButtonStyle="ButtonStyle.Light"
                                        Size="ButtonSize.Small"
                                        Click="@(() => NavigationManager.NavigateTo($"/__componentPrefixPlural__/edit/{item.Id}"))">
                                <i class="rzi rzi-pencil"></i>
                                Edit
                            </RadzenButton>
                        </div>
                    </RadzenCard>
                }
            </div>
            {{/if}}
        }
        else
        {
            <!-- Empty State -->
            {{#if (eq UIFramework "Bootstrap")}}
            <div class="text-center py-5">
                <div class="mb-4">
                    <i class="bi bi-box-seam display-1 text-muted"></i>
                </div>
                <h4 class="text-muted mb-3">No __ComponentPrefixPlural__ Found</h4>
                <p class="text-muted mb-4">Get started by creating your first __componentPrefix__.</p>
                <a class="btn btn-dark" href="/__componentPrefixPlural__/create">
                    <i class="bi bi-plus-circle me-2"></i>Create Your First __ComponentPrefix__
                </a>
            </div>
            {{/if}}

            {{#if (eq UIFramework "FluentUI")}}
            <div class="empty-state">
                <div class="empty-icon">
                    <FluentIcon Value="@(new Icons.Regular.Size48.Box())" />
                </div>
                <FluentLabel Typo="Typography.H4" Class="empty-title">No __ComponentPrefixPlural__ Found</FluentLabel>
                <FluentLabel Typo="Typography.Body" Class="empty-description">Get started by creating your first __componentPrefix__.</FluentLabel>
                <FluentButton Appearance="Appearance.Accent"
                            OnClick="@(() => NavigationManager.NavigateTo("/__componentPrefixPlural__/create"))">
                    <FluentIcon Value="@(new Icons.Regular.Size16.Add())" />
                    Create Your First __ComponentPrefix__
                </FluentButton>
            </div>
            {{/if}}

            {{#if (eq UIFramework "MudBlazor")}}
            <div class="empty-state">
                <div class="empty-icon">
                    <MudIcon Icon="Icons.Material.Filled.Inventory" Size="Size.Large" />
                </div>
                <MudText Typo="Typo.h4" Class="empty-title">No __ComponentPrefixPlural__ Found</MudText>
                <MudText Typo="Typo.body1" Class="empty-description">Get started by creating your first __componentPrefix__.</MudText>
                <MudButton Variant="Variant.Filled"
                         Color="Color.Primary"
                         Href="/__componentPrefixPlural__/create">
                    <MudIcon Icon="Icons.Material.Filled.Add" />
                    Create Your First __ComponentPrefix__
                </MudButton>
            </div>
            {{/if}}

            {{#if (eq UIFramework "Radzen")}}
            <div class="empty-state">
                <div class="empty-icon">
                    <i class="rzi rzi-box" style="font-size: 4rem; color: #999;"></i>
                </div>
                <RadzenText TextStyle="TextStyle.H4" Class="empty-title">No __ComponentPrefixPlural__ Found</RadzenText>
                <RadzenText TextStyle="TextStyle.Body1" Class="empty-description">Get started by creating your first __componentPrefix__.</RadzenText>
                <RadzenButton ButtonStyle="ButtonStyle.Primary"
                            Click="@(() => NavigationManager.NavigateTo("/__componentPrefixPlural__/create"))">
                    <i class="rzi rzi-plus"></i>
                    Create Your First __ComponentPrefix__
                </RadzenButton>
            </div>
            {{/if}}
        }
    }
    @if (!ItemsLoaded || IsWorking)
    {
        {{#if (eq UIFramework "Bootstrap")}}
        <div class="loading-overlay" role="status" aria-live="polite" aria-busy="true">
            <div class="text-center">
                <div class="shimmer-text mb-3">Loading…</div>
                <div class="spinner-border" role="presentation"></div>
            </div>
        </div>
        {{/if}}

        {{#if (eq UIFramework "FluentUI")}}
        <div class="loading-container">
            <FluentProgressRing />
            <FluentLabel Typo="Typography.Body">Loading __componentPrefixPlural__...</FluentLabel>
        </div>
        {{/if}}

        {{#if (eq UIFramework "MudBlazor")}}
        <div class="loading-container">
            <MudProgressCircular Indeterminate="true" />
            <MudText Typo="Typo.body1">Loading __componentPrefixPlural__...</MudText>
        </div>
        {{/if}}

        {{#if (eq UIFramework "Radzen")}}
        <div class="loading-container">
            <RadzenProgressBar ProgressBarStyle="ProgressBarStyle.Light" Mode="ProgressBarMode.Indeterminate" />
            <RadzenText TextStyle="TextStyle.Body1">Loading __componentPrefixPlural__...</RadzenText>
        </div>
        {{/if}}
    }
</div>

@code {

    private Task DeleteItem(string id)
    {

        return Task.CompletedTask;

    }
}
